

# Problem 8 ----------------------
def product(L):
    multiple = 1 if len(L) > 0 else 0
    for x in L:
        multiple *= x
    return multiple


def find_largest_product(num, len_series):
    separated_nums = [int(x) for x in str(num)]
    largest_product = 0
    for x in range(len(separated_nums) - len_series):
        prod = product(separated_nums[x: x + len_series])
        if prod > largest_product:
            largest_product = prod
    return largest_product


print(find_largest_product(7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420, 13))


# Problem 22 ---------

# Get the file with the names and convert the string data into a list
names = open("hw43/p022_names.txt", "r").read()
names = names.split(",")
names = [x[1:-1] for x in names]

# Challenge: Make our own efficient sorting system
names.sort()
sum_points = 0


def calc_name_points(name):
    points = 0
    for x in name.upper():
        points += (ord(x) - 64)
    return points


for x in range(len(names)):
    sum_points += (x + 1) * calc_name_points(names[x])

print(sum_points)
